(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    157230,       3108]
NotebookOptionsPosition[    155388,       3043]
NotebookOutlinePosition[    155741,       3059]
CellTagsIndexPosition[    155698,       3056]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
   "Cubic", " ", "Hermite", " ", "polynomials", " ", "on", " ", "unit", " ", 
    "intervals"}], "Subsection"]}]], "Input",
 CellChangeTimes->{{3.683939662088442*^9, 3.683939687218589*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "[", "t_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"3", 
    RowBox[{"t", "^", "2"}]}], "+", 
   RowBox[{"2", 
    RowBox[{"t", "^", "3"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"t", "^", "2"}]}], "-", 
   RowBox[{"2", 
    RowBox[{"t", "^", "3"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hn1", "[", "t_", "]"}], ":=", 
  RowBox[{"t", "-", 
   RowBox[{"2", 
    RowBox[{"t", "^", "2"}]}], "+", 
   RowBox[{"t", "^", "3"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hn2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"t", "^", "2"}]}], "+", 
   RowBox[{"t", "^", "3"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.683937576851717*^9, 3.683937601712041*^9}, {
  3.6839377087015133`*^9, 3.683937720266912*^9}, {3.6839377529488897`*^9, 
  3.683937882768112*^9}, {3.683939656338439*^9, 3.683939660762207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"H1", "[", "t", "]"}], ",", " ", 
     RowBox[{"H2", "[", "t", "]"}], ",", " ", 
     RowBox[{"Hn1", "[", "t", "]"}], ",", 
     RowBox[{"Hn2", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683937892992568*^9, 3.683937909142662*^9}, {
  3.683939401810419*^9, 3.683939454976198*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wPmC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rZ7+M84s/XkI/g9IADTq
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4Z1UfweTzUasefkjP+JLn/3pmg1slKoNbnxOLCr3fKi9nQ2lLTo/xoj19wc3
tfWwcczscZzMTwqe4UfKWwfZyPZkpW8m5gpIP/82wcbneaqyF4iFt4xGtEyz
IX+JdiqCeLNXTVDzHA5KJRVWpxLHdobafxXhwCQ78XsLcY2Ci2mjBAeMyuLm
n8RzDmzb3CDFQfmSZ8YLxyho35NTrZflQFciZrkcsWv55J91KzhgG4nYaxJH
CXLn8lZx4LXJQoROXLb13QhHjYNu9+K/TIl/e99uYWtxMONckWZLrJnmVsnS
5uCfZ/nPnYiP9hjlMjdxYPtuWuQU8T2llcm1dA62irV/8yIuPDQbWWPAgbB+
zcpLxGMRjVerTTgILVXg+hOrVmV5VplxEK6xdiKI+KBQxNFKSw4Gh+xvXCW+
pe9hXmHDgXfkgjC+P/ma6pXbcTCaEEYLJh5+p6pW5kC+99ikg/8+pX5B6S+u
HMjPjdrC/571qu/zSk9y4GZXP/c8cYj9xx/FHhwMq7vR+e3NfvDwe9F5DoJ+
Pu/j96e35nx14UXyfb3hRQeIly+0/PjZn7Q/JD6OPx5mBpovqascxFpLPeeP
1xW/hQ8Z/3AQqJGqpEWcltEZUnCbg+C7pZLyxK2DlFf+fQ48hQp8FhEvUY1z
/BTFwQrJH3vHyXwZOVyy+BjDgb1O/pPvxBeibeh5Tzn4NRp4rIz4q4j4spxX
HETZOux/QCxq1C/04S0HmwU3BVwi1vcv/ZmVyYHfocuK9sSJIwG1GQUcqC2n
yuX560vtcH56EZn/sMuc36P8/LDp9fsyDv76IGtbT+zOHQl9y+Zg3ML7Sxhx
rFiVd1o9Bz6FA9kuxDUmKc6pzWQ853xS0iPWznXUf91N2t/X7NpO9sfvONb4
i98clDXb5SoRa9andjwX4MJUlHN9kOy/o5K3WEnzubiocq82m7jwqmFqojgX
Uiv2NpsQ3zqR4RqvzIVKwvKu/WR/9+q/Dl2kxoXiSp6KBLGx9LMUby0utH4t
S/hC8sOckohB081caIzJWukQ+yp7eU/u4YLeKxY7Pkj6++tklPM+Lo5PK1Yn
EGuznHKqD3IxOuCjb048HGg188yFi8bkio4Ykq9cW9aHWF7iwv+IiokqyW+F
mWovPgZwYbXWObS4j6yn20plqiFcNDjFizgRN+lJis7e4eK5zkhrZC9ZX9Ej
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
NLUVzpYDq97sJV4x0Ku1aCuW5+WlmdkQW6x0kd+4BTfCDxXfciTWN2IHf9oA
V8PPN+1c+O0/d9itRxfbJ9X2ahzn+7HXImldTDpONZafIhbP8wkM0MZx3Ycj
C32JX6hNH7iyDoZ9tKyGS8TxmkrrS9ZCIf64X8oVYuk2tcrFa8FdsFFo11V+
+84ox3uswY4m7vJ/wvntWfzF9LAqVtyjt9reIw5YkuSi/hd+GyU9V/2XeO23
n0sEVJCedn59aTR/PG4a4PNKKF1dYiKUxB+/nc2TOxQws9HvD94Lfn2Ol5Cd
HOoH2phJL/nt+WLsFCiLOzbvDxu95ffXylxqaincRWRXSqXz42N4582kYMII
6u7I5L/vg4l22hLMqlmeu5bHr18Z1pwggYaWDxv35fPjL2UxtcWRGaE4o0zx
31fa7Z7yB07PDIcWlvDrxyXlhApj13tb84gyvkUj96rMx6rjBYudK/nxRXN6
Wufia2147FwWv5zad95zlp4dMu7E4vDff3jloqRf9IgtR1Yn1PGt9bB96QTd
Y7h40LORH5/gKFk6St/9TDN9ezO/XEH9WeYIXeVgpK/kd365ot6hkgH6HLEZ
emsb33mVF2K76c2fXQTfdfLd7lD4Xxs950Lll8Aevrmxn0Jb6JFrdML39vNt
2sBRqaOfbX1srTjEd8VKiYJauukDwWUjI3zTLF2TS+mqpu4tBaN8r7Cfup9P
FxRgJ94Z53ujV13hW/q3jC1uR6f4Pnqu+GEcPc8tQWvt9P/r9wrH+NMfKCz6
OTv7f5Nfgd7/ALBO6XQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV13c8lV0cAHBpCUkaXjIqI4RUSImfojKyR1ZSJMkOJZURopDKShKhYe9V
7nEfMiLJiLLvvc+9V1a0aPCe/vL5fp7HeY5zfsu2M15mZzk5ODhsl3Fw/Pup
f5b9vn7cUrOIUiw1y0l5tUJb2HtESBkCps51DmoGUvY+TkkrE9KB1I+rFC8e
fEBhiEiGXpI2glDpIfNHp/MpBm/7Sh8JWQDXUt7mI2o1FMkY0ZwlcRso9uEd
dSxtoPzRd0o+Le0Acxv15Rps2ymfw3saTyedBr5dj7f663dTTjj/rLsn5Ayc
p3mvqyt9pDRqC1c1pLlAne0KoYjhEYqShEbxN/HzYHrhjuLdXDoljdPxhVTW
BbjTvPBptpVF4aKFPbGS9gRD8djm44aTlNrRrrcNFt4w8ox705HULxRvE2d9
+yQf4N2yS6QVvlKGdt3UjhXyg7z24mTTrQuUhMf/1UvZ+YM5++MhTbs/FP11
uQcpaQFgIRRUMNq8RKmcbleZEQ+EiVqHVJ6Hy5G7g0PpzdNXQAc2NbQ+XIm2
d8wobs0KgpA8c06DitUorkBAxlT6OnT/p/zr+h5edEQ0O3v8XDDc5Hr1ViqJ
D11vSuWnWoTA8+G2H+rR/EhZVT7WJikUCmR5JG/IbUAZm4wjbwmFw1D6ae97
HEIo6G1yo1VtOOjupjSjBGFkFTHKKWEXAT43+H/LqYgg3u8+wS/TIiHd8ip/
Uao4utyTcHlSPBpat5y0WXtVApnHDFVW10eD4I7V3bMBkkhRR/p7+OlbMMpx
z3L8khRilFX5iGbdBnnBujCemB3I9P4nNyPpOGi/Gzsw92cnkjeQeCHcHAer
es78OiKjgLiWu7OY5+6AZffiwQwbRXSqZrEEWcTDQY5g0T3nlNAm2XhF66S7
wDEpdpCDYy8K5SrbES2UAAFv/PzEqGpI7tjdqFLvBNh4iNzjmrwfdUV4jQ80
J8D15K9Vij4HkORy+TzFgES45zBpoLjrIGr6m63Y05UEZiWnNg31AOL9mqQi
HvMAoiXcgwXo2qhit3+SLv0BRNyprmOc10EO3uY/fQ6kAveYdZvHnA4qmlpX
08hOBUHfJK8nXEeRGTvqoNuRNBD9tfZBlJ4uShm6ol2xmA6F/MrWwyKG6JCI
Tfaw5WMIWs2oYFAM0WfbfSu5Ch7DxY+TRqlnjJDYZKBTgUIGGB7nNlpfZIy8
zqtKcQxmADWWks6vaIoEnIue56g9AR9Wg/Ou5RbI2iaz6MtsNiiEKE4uGdii
mQEL7ifCOWAitEbMrtgWRTpwnTXXzgEFgVPlFzbZoTInL+HKhBwIy9mglz9m
h/g8NSKC9j2Fp/RX+TlhJ9HrsI+2q649Ay6Jxc07LjqiPfnrV4lw5UKSb6tx
nJAzalV87fhWKRdSTEcdaVbOyLHk8svrNrmw93McX1yCM4qtHPEey80Fl+jF
wQn+s4hdXzDw1DAPDHVV71PWuqD0Xr2S3ffzYR/v9be5gq6IZynU/phYEbi9
3Vo3e8EdpZw/4SB/tAjuy7yuSS91R5I98o7rPYtAUEXle9qCO9J80ec0UFcE
dgX+bTFRHqjmRVJFlWIxNMucdduX64mmzCdfGXQUw8OTZbxm172R5fPktotr
S+Ew66F62rQvkjKdZjfcLodPfZsjt+hcRsLBxw6cyywHebfRsxv8LyP+gozb
3FXloKDAzNn39DL6xWWuaEorB3e6Hs/KNYGos77q4rBaBVxynmgr6QxEV5RC
F+fJCrhpcVrmqGsQ6li3caOiVhVsafdwn6u6ji517IeUbzWwh7t/zdqJMCRY
vn542TIEw6aK9AyXW6iSpt3+7iABhVVeole77yLC7dEWm8lGGOXpE42iJ6Hv
0hrrCjya4V5XXGL7qjTEuZDHv0XqDXhw1SRdW8pAqkuOleaF7TDzTqdn/1wW
ag9X7miSewcL2p+/MH48ReLxEwsvpjvB+/tWDRW7XDTxc2S4V6kL/tvev/nA
wwKU/fnlG764btjzs5yDkVKM+ESfzTAYPeDvkPQz3bEUxZyvcMmQ/ADROhs+
NXGXox9aeQzX4D5osS58UP+hAvntaSzf3NAPySabJFquV6GRwsbb77d9AqO6
Oo0RrRr0263noeyVAVirbmqbM1WLdh5avejychCebIHRYs9X6NiTbedKBIfB
uJ9jj9mfOnRJ9NT2MfsRaEz0VSy1QUh+0pKnz3AUxFPYOyyP16MN675wNf4a
ha0utXsDP9ejFehhkUTaGKzYZ2UU7ElFnw7q6I6kj0G+wIHDKd5UVFQ7OZqa
OQZ1weGLRb5UZFupISDwbAx+HXTqGAigopKCET+O0jEovk2vkwymIoc0iQND
zWPQX93qHXSHiqoD8xqTvo7BNd3FdrUiKrqg/PLjGgMaHPqSnNj/mYrqO3vz
qw1psKQgeC95koo2eXwJPmdCg9M3G3Qsp6kI5UhJv7akARLoedM+S0UbBON9
QxxpULVXxjB/nopeLjjz/PSngfjQ/tfyqwjEg/g0GBk02EZMnlDaSiBHO1n+
+1k0yFaJ3/96G4EqfmrTDz2lgeEcg7CWINAppcDox3k0eNXe9SZImkBlmfRe
20oajBdsyCqRJ5BdeLXn+za8v1PN6wbVCJSndyaD8oMGvpdGC2VMCKQsv00T
FmgwEX3BNdCUQBS+0QH0mwYGqp/GW8wI1Nl9UpDKQQeFY58PO1sS6NtJm7gG
bjo8LI3RjrElkKavydUWMTqILCTKZzrj91M1rbuO0sEkJoFn8BKBbK79/W6m
R4cGN1eelYEEop16db/bgA4Fqqea5a/g9SQPvOsxoYNVqIbv5asEEipSOdpn
SwdRA79ojlACnWmQVx70pIPXQsSF7mgCfZ8Q5mcm0eEj10b30FQCJTxiNac9
oIP5qn2vkx4SaK9xebB5Gh3id6bfz00jkE+p4Ux9Jh149Wzi3qYTaOpySMfD
fLy+2dlpjiwCkSuZMaYEHXYWsGdE8gjUK16ypm6KDovcGiXStQTye3+NevEL
HWI9775Z85JAG27oB8p9pcPzPnn9CWxTJp2dPE8Hzc02V17UEeht/uYW3+UM
+NZ0/q4AlUCv91+NlBFiAP/qkN3Jzfj+zI8tT9BhgEjk1jmXbgJFGVRHiBxj
wPzu15bcPQSy15blytFjgIyBzbF8bM69PGsrjRgg8Ki1a6KXQEYC7zb3WzNg
c7Z4iE0/gdidVnIiHgx44qI7Mj1IoJctzfnZXgxolNv57coQgeLq1XYp+DIg
rJYRv3IY33exsLLmJQbYbrRy3DxCoNA7wxqOoQy4khR5XHqMQMJGLqbZiQxw
+PN6xRIDn9eRvm75FAZI19mfv0gSqF5D16oilQHtz0qMmdguCnJ2TY8ZcLxr
XUYzE8cf77Qz+wUDz1tzOpfZBIpccYrlnc+Aest3+aPYtn/enV8oZECIhMP9
Y+ME4pgs8eQuZ0DKNp4B/s8EOt7mf1mewgDJ2J96dycIJN7A/FVez4Bpxeq0
Key52hPXNBoYMGwtdkF3kkAPcveHGbXg9UUsAxewmdF/b3t34fX1qCZ60wSq
CfXkW+hhgOf65QEPsGMCR+JD+xiQzT+8gY295zw18d4gA67GfKwKmSFQsG7E
43Im/vsc1JMefyFQl4OrvdI4A/Ip+yVo2JL+BkL5Ewwo5ZVVkZgl0JvM9fez
vjDgMsONmYG98fejyHu/GOD20NPv1hw+n/Wh2nx/8X1GsMSo2DU7nDluLeH7
AF+DH9gOFnJXQleQoJ9sKGv/lUDPCyo9vPlIqJzgm970jUC/Gh7ITfKT8MN3
zWMtbMNPV1nnNpBwtED13XnsuVXap0/9R4JVfk1eFbaOqLTYgDAJpS9OnBjE
Tt67ZsBKlAT7tuqQJeyDju8sjLaT8GbSwuDQdxwfAaXr30iSoCjVP3EKeywm
sePIDhL++1rIdQ1bOevybaosCR98r2WmYEfW2OlqyJNQXc+qKMXuf6e5skaR
BO6Fu0fasHcytxHKu0kQU9tqQsPuFGCry6uSUK8e2MPzg0DbZdvmn6mRMKkW
YyiG7Q+FFRLqJAgUbtDahd1iedf3sQYJIVVleZrYwu5+u7ZokRDlwx9/HNs9
7MRk0mES/ObfTlpjo5QDLwSOkJDkGk91whYoEnWJO0bCgeHfaz2wnV9zSHDr
k1DsX/7eD7tygD4ScZwEXQMH3iDsNXNNacuMSTAKelQXjG3PlWtzzZQE/u2b
yTDsQrHYzQvmJAzbuYeFY3OoeHf7WZHAdUQn8Z/NDczjv1iTMLhwSPQG9tPT
qobudiQ8TVojHII9f0mIm30S3+c+uP3ve/pxf5qcHPF9LER6+2M/yh65MXKG
BMbP8NZ/+/1SS2jZnSUh3Xgo0Rn78Pucvx/OkdAvotxrg53Aiqo1cyOBFqRw
0xCb9ffCpQ53fP7RHnmAfWCjsbK+FwlpjimHlLBj5PbMvvYh4bOYmZ449rDW
psJDfiRojWoSvNi7T8y71QWQ8KWeM38e31e4x8CO/YEk6AwdWkXH/nCDwigP
IiHONKPz3/3KpmZmKl0nQfgAwV2GfbU43CE/hAS1MoPyf/GxbUi/PyuCBJcW
KYt/8XSLUC+yjMLf05i9p4E990w+cvVtEhoXLeaFsAlfPuUL8STwta9TeYvj
U856iVv0Pgnza67yZGPf1/gy1pFIQtd87qpAbGeurjt7HpLw3DDovCh2+xTh
wniE1yN3d07i/FHpLtNIyiBB5H6vTS32qvTEiYUcHH93+XqM/+XXXptj1GJ8
X4NeJ5xx/vEL6YtdLMO/P1jVIokduHjgu2QlCQG1h2zoOJ/1W0Wyol6SEHnx
yAdb7AmH0UXjJpx/qSp79+J6YKHzvndZKwlhRyvuMnD9eCVL5Je14fN50MaT
gB3zLctW8D3ebyLTZArXG8Vb5yqHB0hQyl1cHz1FoCQv69j4YRyPx+y1dmIv
Weg5Hx4j4bh5TmQbrmed4jsFnjJJcBWRtFmF7VMx7eExS8Inpb9cZ3G9/JQ6
oiP+jQTr5SPjP3E9PRzSueX9DxIs1i4bicIWMChtVf6Dz1deaUUOrr/lo/5S
f1YxIcbMSaEJ12uRJpc/BWuYMJ/ulaWHHZF3ovsULxN8J/jl2nB9twrYH9qw
ngmD7IPnWnA/+Mnzd/CWCBNu7XVKyKPheNsXniC0hwnC84rmG3F/+XBGSPWR
MhM0Ff2FbuD+czGusG/rPia4dwjJfcH9KZ/sF5Y5yISUMQ7Z1wMEEktQyFQ9
yoRJp/57th9xv5v9UGBui587aDTswf0vXcTduM+eCR2ZVZyRuF+q6y6btT3F
hKbM1Mi+LtyfH+9UPuPMhHx3UVv/97j+G4bUensyYSM8l0rrIFBbrmxzbBgT
zOydfie2EMj1A8V1fQR+3l9p8Rb34xWcFtyJN5lg4nRtkhNb0+a6YVoME5gH
mb2urwlUvLq7OzeJCfprayLECZx/zldHm3Pxfp9/XamG+7+92LuFZd1M4Puj
NSWQTyA+Id+Kl71M6NSqyvidSyDqhk0+/v1MOFPVo0J7QSDpNXZs9hB+30R8
+YtnBJr5yvzwjs0E2zcvRETxPBLWulj2aJEJrjW6Y+kPcLz6KXrul2OBu6ql
w8oI3D+93st+lWdB+gULuxc3CLTWzY/M38WC+BttcgZhBPI9VWu/VYUFPT7q
EBWMz0v/qMFqLRaU0vqV2Hj+6hB3kOm1ZIHVJKVd0xPPU29iad6hLHC0GE7Q
xvPdIE+v658bLNC5eqP+lTnOz+MiMzcjWeDa3zm/F8+D8R25v9NvsyAgtj9W
xBjna1fzxreJ+Hu33mh+0MX97OOyY7K5LLjVXXB2Qp1ATSz/vLEuFixmC21I
xfNsvkzdbo9eFmj2SWzsEcP5fX5F9XwfC2gagZt4RfG8O3Gvcd0Q3g/XFcEA
Idz/pouGNFgssN3DybdHgEC7foyvS/3NAqWBTE+95QRKWeHgZybJhntRTXpf
6VS06CSo8l6aDTEezxt/jFGRc0Pnd2NZNojUdh2bH6EipTDtS4aK/3z77PcB
KmpZkrmiq8aGqKcnv/V1U9HPX1+DNY+z4Un117WaDVRkNRt9W86PDd/+Xs2+
nYHn9+GKJ5yNbOCbzvktaElFcbzXrlU1seHP3O1kZzMq4lbXsXZvZYNasmVz
oTEVcaZ0rf3QwYbKuapRdX0qmjOdufziIxsCzldOqQEVdb6WMTaZYUPt1wgu
igwVxRQ8/P1IeBz+nGvnmF2oRyuvhVrs9xmHbyrDP0YS6lH57OQCujgOvLmD
z5vu1iNnF+vHRwPGQWZXt2ReXD1qNN712TxoHJzTpQI9oupR+PahYM+IcQjx
ao/qC8L/L7Wo5WU9wM/fhc9onalHnBu+LOMjxiFNvFrFRaEecbxwKKIJfAa1
x22/3wQi5JtaFCtAYCdEPbY3q0N1O6O41ntOwNb0rclcQ7Vovb6vfBjfJIQE
CNCUtKrRoEJnd+CrSWhp/nwW+CpQcTpIMhymwDFthtukugSdLFJdL7o4BRmb
SsJ/qeajkIjM0MHcaQj5zucpmJiFCtiiD/mOz0DIdNrEnxuJKOpRhOOw0QyM
fv5t/nJ3InI2m5IqNJ0BxzFeSbuRBCTy6lWx4YkZ4LB48FnzQAK6dceuKebM
DGz1yE9Lmr6HXFUfzHIHzkC93cGZMNN4tD18o+7qp3h95U06zhyRaFHt6tq+
5zOglag9IGcRgT5O0bue5uH3zcX3lT0LR/Enyk4eLcHeGLVljdENtCRndjHi
Ff4eg1LQkhyCBt/fSV/ejS1700YcAlB15E+n7l68vriq4dCwH0pQPyWb1Y+f
749GotcvIoMcxfLDw9i7PIekXnqj2stvW0PHsfexrJ44uKAkBZU7ppPYwHXj
cJIT8qGlWWybwf5Rm8lsd0Qyx91H6r9h63w74+dphVYs68mO/4lNK0FdvSZo
tELdzfEXdlT1lFfAUfTKLWuX0l/s/wQF71xRRcniPN+XlrA5OIj6cUvK/4G2
irg=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.1481481293526843, 0.9999999999999989}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"H1", "(", "t", ")"}], 
       RowBox[{"H2", "(", "t", ")"}], 
       RowBox[{"Hn1", "(", "t", ")"}], 
       RowBox[{"Hn2", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.683937896924629*^9, 3.683937910027854*^9}, {
   3.6839394164994593`*^9, 3.68393945616434*^9}, 3.6839941078833113`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["H1(t) and H2(t) interpolate the values", \
"Subsubsection"]], "Text",
 CellChangeTimes->{{3.6839396298840237`*^9, 3.683939646945716*^9}, {
  3.683939744329821*^9, 3.683939749960067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"H1", "[", "t", "]"}], ",", " ", 
     RowBox[{"2", 
      RowBox[{"H2", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"H1", "[", "t", "]"}], "+", 
      RowBox[{"2", 
       RowBox[{"H2", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683939507567555*^9, 3.683939597955578*^9}, {
  3.6839397897376413`*^9, 3.683939796701901*^9}, {3.683994076962594*^9, 
  3.683994084656994*^9}, {3.683994589782683*^9, 3.683994593901876*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd1wkwltsfB/CXXERZSnWJkKVIkkoovq32FF6irBFSsqSSylIou8pFUilL
yL5vXdubriJKomRfsj+61xKJ/3n/Z+aZZz7z/c2Z3znPzDnziJ9xMTzLSqPR
+snDfOucHf5QNWKsPrPMHBTYDgu5dgvuRm/HLUemdz2Njc8XPII4rz3PfxMP
CEv6XZXWR5CrZuYCsW5jW95jQTrWGQ4HzRJLhookL4uaITVfU/kH8aKObYyN
tCVSZf4qGSUe9f/EsIm2gY8Wjbuf+KTd3Kv7gnb4K6lkx1dixmGh4tp4exh8
nJBuJlaQUMuZFj0HEfumKQZxPKt1mlTieVhPh4aVEHP23XpuIn0R/vwmv9OJ
y3o+NtbSXUEZnDoQT+x6wk7HPNoN3Dr1JqHEnTvuHA4T9MBMXvKSI3HU0z+r
pE5fxgM990hjYh3e9P1/x1/Bbcph9gBx0WTDHkr0Gn4+D4UA8QVLy7w7Nl44
9k1IYnGJwub3lLxY4nVEu0Z29BGHZ67ZaiDtjae/qHcZxEdFkpJGHHywc6MK
WySxd10cXzXdFybft6xxJ96tJBdmFu2Hxc8F2YrECeuOBwYL+kPseNVs8m8K
1xtjGCZl/ijiOd/rQ2wS0MMqcToAmzcpJ5oSr5px8ymPD4Sw91wGO7HnpyjP
cdEgrPBGF32RglFoZ1FJVRCy5hTuSBHLH5Ge8bcJhrtdNefML/I984vdRBJD
MOB4MzqS2ODBVyd96XB8MI3uLV2gIKcrkSb0JhzJKfl0P2LOFRe+DzlEoCV4
/JkmsVXpUm4lPRKdDi7vmucprJOJlDeNvoc/cyasWn9S8OPM3xIkGIUz9Isl
L2YpyGreu5vnGgWNnVSwCfHHAJeRjjdRiGkI4mAjllwh91L+yl/oeLW0fGqG
Qt3vJPlPH6MRxR40/fM/st7/oveIhj6EOM828ZkpCoU7L0dr9T+EaGVebjix
pavRnJtqHHjkNk1JE2dP8JYyhuMgUnr/qhFFwXD47n6no/HI3BhVHD9BIbbT
63Dh0hP0dK/YOTVC4aCwWVKX8VNoqylWeBCPntr7B2fmU8jQeebnhilsGr9m
m7k9Aenba+4ufKfgck5JivYtARbcZexTgxTW2GWnJis/R4P+bG58LwVTs2fZ
Uz+SsLZn2XmpjQLVQed6LpSMXX0r4+yIAy05zxodTkbwjEJa/WcK+bYuQkVR
yaCXPnKLbKXAc1Et4PreFLTFaOfwtVB4fevLKfabL8DJ2MP3rZGCYgY/uzBn
Opo8/sl/WkOhXv61daNCOnyL1ib2VVOwzvUs9zZLh5Hxi+uSxGFF3a696eno
Xus8klRJYbgqsyPl2EvMX2mviK2g8KRVO3fngwzkDltc1CuiwL3sZ665KRtT
6+KNB1PJfp07aSmnkQ1ew3xFLmLJT3LW/BezsaGqZaX8CwrqaW22Ha+yobN3
NMU9mUJpWnRhsXwOREtuP6OeUZgwGq/QfZ+DF4pC1SVxFIxTY95dWp2HHf6W
1N0QClIGk8O1IQUQtoncvc2JgpCPpqrDswKI/RqYmXOkwJeZEMJVXIDVNS8j
ax0oLHAayRv0FWCL1k2jk2cpNFcVX+pSLgT/iSwBN2sKXgp+Sz8HC6ElqVLq
bELhPa+AgPyBYjQGe8qGHaRw9b0KYqdLoVrQkuYmQPZbvnCwnrMMsK2jeNdS
SApTCP0lXIZZ83WHMvkpfNDb8sXyaBmuKAatGuShsO2dwCWp6DLUXuJV115J
ofsNlZK3txwxle/VBn5PQrM6mafRqwIWix0s9kOT2FDA38XCUgntVcdkEwsm
UdR3uKFpfw2yORmOXvsnUeP0eKPZOAN5uq+d+4smMCOtxpvp/AZ+sV3bxLdP
gHX+Jd9GqbcIjlzVqRU8DqVl6yKjrAayvnuHLgyNocF/9/s62SYs05fL3faN
QTRybD5tshluvYPtO6+OYmyuu6tV4SMYN9Km64tGkDRa/pYnvAUs7k3/Ln4b
Bo/IC2pg4BPcp9nti5e+I/RcoX2C5Gdc4pZ9mbH1O2YPvBxw9GmDu9QYnUN1
CB6KjIL1te1g1VMXXjQeRHcWI+SD+FfsDDsrxnpqAL+cPj2S8erAE9/j/rGW
/dh2kGPJvvwbwqdCzI649UHzubhD7oYuqKx3G37n3IurIlabe827kTMQwWrk
1QO5cWPutmM96NhF57u1vhtreac4GQs9GDAcv5XE1wm2ykfZEvG9UOrSl6ze
0YHzu8u/rNTtg1q4BP2H7Be81D6T8PdsH3icn6o07mnDzJgQ31B0P/qX+DnC
zrWi0EhzRdSRAeSsVl7P4ttC7qWApwVDA0jZul7nSfUHiHfqtCcGDEKaLd7s
yoZmqO71jxJUHIJ5QskwX3YDzDc1zbO0DOHG7InKe0H1mHkb1ufq9x3tb5ut
WY7WIZbN0sNQchhsma3/BFjUYm1X4XNWxjAyDuoW/06vwh83/egqbiOg6bQ/
zGovBy3NMrtvzSiaDQ7Ohq0vhntcdtiamlH4OiwFhp3Ow6ttdzn5L44hwWTQ
ydE0A/w67nK3eMYhppR9OtoxGQnVvNyq/ONI8LrH7qyXDAWVzJEfa4m5tM/R
FZKhv3U4xUaQWE/rrPHPJASzW4oflCQWmE8QC0oCW632epoq8b1c9+7MRMzu
E6d5nyXzb5no+JPtOb5tb265VjGOA6tWGT765zGejvHfXFE5jqq3u/dwxT/G
mTQj6bDqcdA0c3piXB5jRLLNM6GO1J+QSOPd8BizG7tE3jQTh0W9dHOIBz/X
uIPA4Dh8O71a2HgeQWOIYzFr9QSqNPmi77vHIucJJAcsJ3Dgq4xwYtwD/Of1
H4eNDcl/diRlXHkApZMvxjptiS2m9rUaPkA5L29+m+MEfMdNM25zP0Cdb9fB
d+4ToOW07TXxvo+OMzet8gKJfWkcbefugX1LeZxvFqk31e7vzgmH9goX7985
xN6OEw2u4Qjt3nzGK594f0fAvEI4+GODZTxKiM9PRPDnhUF45akShxoyX7a4
nnpxKBTHfrbqfybele8T1RgMi2wlfpElUv/H63R/2TsoOvWTp5k2CdrUonTZ
RCB42MtW3V5BzGu8ZX9uIKrM1ThHOCfhy7CjpFQCsZnryHLBWpKzLKjc1wvA
kJ3BhJ4MsWt5wle/27godKH+Bp3Uu8f8e0/aF3Wvt7/ZcZLkk+GrRoZ8IOpG
MfrMiGki4zp+Pmh+416lZUU8XqU9WOwNxcvXigWciD9vKL0qdxNzTYHJGT7E
Gn57t+/ygm/AM79v6cTyajvSij2w+iqHjk0m8RpelwonD8Q5Oq8ZyiZ+/9r0
9CYP5OuqJFLkXKP1Vwbtv3MJQ/wfGKyVxIrztAgrd+g+oXHKtBA3rVMLknVF
e4R9c2YrsYBnFqPBBXZ+DbGK7cRsPnvuHXWBt12szP5OYnvPX9dULyJHVkH3
+HfiGvXkiJ0XsL7YKvzyL+LoIzYzdEckpr42WSDnLk1IQ8W2ywEKcdtEfWgU
aF//PTPp6ADtm3PZd/8gVuU6b+FnjxuHIz484iX+aByaWGmHvqa/BWokmHkI
24KbDVyqJTs1pInl9V2MVttgMS84+d1W4s2Zso1p1lgXbaLUup3YYzb5SIMV
tMwnTw7vJRb+dTy33RyZwyKPePSI/wxJU7c8ibuPA6y79IlzplQ3ppjAznBC
KsuA2FGru3HKGMIVFTnHThKb7rtSHE5HcMTputAzxKnbLqWPG8D+SG2IObnn
aJ6bFDV0DXBoXtZAjtyLtKpO+YqME5g/s9Dxzpl42GLSbUofjkoPf3BdI1ZW
yOO01cGRMVrx1+vEYp+VWfS1IZrgeCPdm9lPfWSRuhY+r1Tm0PEnPuDRfXqn
Bo52fhYOiiDuaZLIOn0IYvfV+0zvE091WKd7HMSiRsqLrX8x+x9lnH9wAAU5
lxX/iWPmH8z8GWrY7C+gxZFCnPD2RGHwXiwp31jdlsrsd+G+qqASvkz0f0x5
yezn4ftT+bsReTLfQiOXmbfe8eBSxIVVGyXWFzD70Vdwf6MArepbw4NFzLzl
uLTYDizLGl4KqGD6ZkH4XVl87S5VNq5kOtnnldVWFEWJL0nWMPu/EXVYXxoX
l6buMt4Q05I07N02QyffVD/qLbFvqgp3ihikHKvW2jUyHXJYYUAE3z5EPFnR
wqw/Pz+dsAElgXO2La3M+T2Dc14LIGqflUxiO7O/EHMLwTVwnaqbdO9g1ucE
cyjzQjdZvuBQF9PSe0wfcUH6VPS1Nb3M+ftsX5mzg5V3Sb2vn5kfr9G8wYqu
2rNseUNMp8/xTv9WL/NsrPcbYfrVVZGMOfXo7XsiDMaZTj39Rexfdbe+eLo4
xbT3dH3SqLpeDJvQjx9MZ9Br/frUt+pd6K6aZnqKqza3TZ2N5VNS5BzTWh/j
096q9xTuc7JeYLr5RklBsXqFU+IOhd9M+wZ6FsWox4hyzzD/A2n/H5/2/w/i
wPmC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qbgkHomtnSVJAnPk/y/8Fw2XQB0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4pxhhqEwwfx/4X/PNVih
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 1.999999999999999}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"H1", "(", "t", ")"}], 
       RowBox[{"2", " ", 
         RowBox[{"H2", "(", "t", ")"}]}], 
       RowBox[{
         RowBox[{"H1", "(", "t", ")"}], "+", 
         RowBox[{"2", " ", 
           RowBox[{"H2", "(", "t", ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6839395632356653`*^9, 3.683939598684854*^9, 3.683939798742391*^9, {
   3.683994100158263*^9, 3.683994111020555*^9}, 3.683994594606591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H1", "[", "1", "]"}], "-", 
  RowBox[{"3", 
   RowBox[{"H2", "[", "1", "]"}]}], "+", 
  RowBox[{"1000", " ", 
   RowBox[{"Hn1", "[", "1", "]"}]}], "-", 
  RowBox[{"99.9", " ", 
   RowBox[{"Hn2", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.683994282664517*^9, 3.683994357910832*^9}}],

Cell[BoxData[
 RowBox[{"-", "3.`"}]], "Output",
 CellChangeTimes->{
  3.683994297863299*^9, {3.683994329324627*^9, 3.683994358609733*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Hn1 (t) and Hn2 (t) interpolate the derivatives\
\>", "Subsubsection",
 CellChangeTimes->{{3.683939824346753*^9, 3.68393989895313*^9}},
 FormatType->"TextForm"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], 
      RowBox[{"Hn1", "[", "t", "]"}]}], ",", " ", 
     RowBox[{"0.01", "-", 
      RowBox[{"Hn2", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"10", 
       RowBox[{"Hn1", "[", "t", "]"}]}], "+", 
      RowBox[{"0.01", 
       RowBox[{"Hn2", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683937699807746*^9, 3.683937702461769*^9}, {
  3.68393786443655*^9, 3.683937865127833*^9}, {3.683939760482341*^9, 
  3.683939817691943*^9}, {3.6839399850101233`*^9, 3.68393999111222*^9}, {
  3.683940034176011*^9, 3.683940041077813*^9}, {3.683994461219988*^9, 
  3.68399448370392*^9}, {3.683994565320984*^9, 3.683994574150694*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
E9uKrmsvLmPAKa+Pa0eJ+0843L9UzwBnq34tl0wKs5YM/2hkMMBEqag0ivjq
J1+9ta0MuJKryt9ALCyXNPb9OwMG7/BkaGdRqL/3Zse3AQaUON3kdyL2DD1c
3TPKgGO7BJzvELO4JZO+zjBAm//nMhaxwNap8K6/DOiN1A+aJd7iRbvRycOE
K03HJqWzKYztDXJsF2LC/t6FrfbENAVXizYxJqzzv7z3PDHPPoMtrUuYMLcv
pOUesfZDuVUtMkwIsCs7+pL4WPXs4mZFJtxxCJ1+RxzBy5rXpMKEBlOX0Fri
qm1ZE8zVTFASKFjXRfznYkgXQ4MJetf/tY8Sr81wr6VrM2EoJP3BH2KnAZMP
jZuZMCq/bbdADoUPlZa/btBjgtAiOSlx4rID/57QjJgguLtsWIqYHd4WUG/G
hJT3SdUKxKvq8j3rLJmQvVE3bznxfv5wp1obJgy+Yb9VIb6n72FVY88EiT/m
GRwXeVvoVh9kwoRQZjEnfjxr1eqqI0yw+PSsk/M8pWFeyS/HmNA777qgNLGt
Sjdf5Uky/+x6Y854Ah0/TpZ7MGE4jzeEM96Cp5Hdny8woefng17OfAZpF+rL
rjBhtcWw1RixrKDNx0++TAhOCqrgfA9Lo7VvSgOYUD7QtruO+LqPYGTJHSa8
oPYPvSfOyO0NLA5hwvfcK08TiXtGS73wEROs5mfYhRBLrHruXBTBhGTW2RUX
iE2OXN39MYYJeTwagvuJLz+z1yuMZ8IWT2fubcTtQqLS798yoShtVu0vyQdh
k2H+d5lMMNtu6tTKyS/fyun8PCYcyGp/nUv8csKvIbeYCdoJWdePcfJr9SHM
+UzmP94uqMvJL5fNqdlVTDiXpJQmQnyKNRGUyWDChh/0rZkkf2NF6i5mtDDh
8QbVlb7ENLMUl/ROJry6cVrNnFj7g7N+aj8T+hOf+HWQ/fHnOZ1K/sMEnyXa
7kOc/daS/iOJmwVd1lWqKcRO4vfor/5jgWQGm+84cVmAcfpLURbIuv1Y3Eb2
770TucfilFkwXv0t7m0q+f76qUELVrNgYOiehx2xqWRiykUNFvx+173gDzkf
eCrCRy22sCB/sifJkNhb2evi7C4W1H1/dCs3hcz398kIFzsWlPoMlloQa9OP
vq/fz4JzA49p3eR8GvffM5foygIbBhzmIz7WpRVoc5UFhymN/VrkvCvLW538
0Y8FbrrXVhe8IvkUolS1KpAFNJ/K+q3EHbriwv/CWCB2MzVKN5Hk17OJx29e
sSDoLfcOZXJ+GthlJPI2smB9qo3PPXIex6onV5xtIuMZcusZiyHfa17cQGs7
C6Y961dYExdkha7J7GNB/Gi3xUJynq8VPZt76C8Ldsafkj9F6oFs9ZrPeaua
IEM7cl8ZqS9X4lX6lq1tAh2DmEE+4iZvufn31zdByjejo9sfkv23aqHlUb0m
eHutdmFRGIXzA4cZIrZNYLdQyeEJqVds/Tff3XybQJ652/gbqXeFL4eiLgU0
gZBv3z1x4hsC6nsC7zTBMMNSUJ/UR2Ha25KER00g+fxM4uOb5Hw/nBbbmdQE
eseN3dX8KNx7LdPBltYE3546RnCTepv7Lr8GljXDk3m6TQdOkPHKzdy0WtEM
PAtLXtq4kXz137T1kFozyDzVyzMl9b7G7N3rKxuaoddUIEndlcLvTe8Dc3c0
gwRLqrbbiewX9kd9Nc9mGLyw5/EsuV94aZXlLPnUDHctRI73GJP101aMe1DZ
DBETNxtuG1HooONzV6iuGTy+XjJWM6Rw6xZtZ56WZiirNDE5BSR/DF+KjI42
QwjXkSrWZgpDrQPcP0u3QNRE0AGrtRSmeBgrenm2QA1XXkv1YgqjPeMWjF1q
gfmVfL7rJSi87/WHfeJaCwwayutHilPocTmn9nBQCzD8xCUPi5B676d81Ty2
Bcb29WswBEg+hfKylKpaQPKYeaDLbzZ2pZXdbVjWCp4L5/iUuthIG+Ed1lrZ
Ckr2wU17O9hYrL7dIly9FY7lD/ffaWNjXMpnIfuNrcBVf7V2sImNzq/K77db
tIJX94fUpzQ29sZUhvZdaoXW6ts7Y0vYOHKv5tHf2lYo9PaYdCb32d/ujCjV
K21wZs+jyQFHNtrqHHqw1rcN9CtmzFsOsvEtd2/g+oA2oLmL6lXsJ/fVCOrc
tpA2MPHWnIgl9+uSz9Jm1vFtUKqrFreN3MdvKx6ZulzVBv8lVQRt2sbGRawR
i0rpdsi0vl66UpqNagb8c8c+tMOsyXQ5H20aTeOXHc9c2glzC3aeHJSbxkty
h5W6D3ZBVmcZdB+dQvVhuwVNll/hVbszvSd6EheJjAuU/foKBtLJU4E5P5EX
o9KXR3eD05sP7tp1E3hS+0PLfPMe4GbNWcpUjuObHc5xReweeKCuItV6eQyn
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
v6nC/wGA1arh
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
F4ksRAr7+T1+wYNBy6xc8XgW5m42sHZ9xUPAhYYOu9sszLjTNK+1joepZo0f
gzdY+LZ39EJWOw+VJuozBoJYaHiuZL5nlIcZ7/lkXD1ZCM9L+JMkNQiDnUYL
U7ay8D+/QEsdr0FsWWwjFPmpBsVfh39XnRmEZdiBZ97tNXB2sU4xPDcIz/lm
OjatNWCbrx2y8B1Ern9qxNKGGjBWdPq7MwdRu8coiUnVQKB2Y056HGkvmJ45
mlWDGRJj/CKsQXD4NE0WnK0BX5Z9fp/4EDgFjjejBWpwOj4/Qpw1hJdWl2vL
eqvwbHWwoJj7Z+Q7Lqp2dn0GMZPTqldEhiGqIygUUV+BT2samn2eDuNAaE9k
QtJjFCRDgWM/glF7WjPXqBiH8rXFZKZG4GBqdqo9uwABzLuBn7K/IOXiZFV9
0QPk8WQSRHaPovLXmetuNSkITmI6dpmNYtmPponVHilw3jey8uHeUSR/7n/5
RjoF0k+fFpgeGIWevWdk/vlkhF4/+CL88Cjsz1/Vn62ahOPacV/n+oxi6qhE
9PfIeKxgLDCenTmKyxm9z9N0b2Fq46V5bQ9G0dVyQSxoIAbtI/1NmTlkvmIX
mNyIQdSBokOGhWS+BQnqZznRmFbZd4b5lMx3qXTSMuQmPjVeT57ZPIo/D7zG
PeOvoyxo4kjz+1FsVtj5xXwoEjGbHZTTP5D2gtOrxnQiseueWvG2LuLVR7W9
P4Sj4sK7V4GDpH/fsc4Q8VDErll/fe/wv/978rwcQ+DVl2i5fJT0b5Qek3oY
DKXdrt3V48SJwi35xtcgwN+SETUxiid7MlISbgWhp2TzScfJf+0hhsZ9TDw9
mb523V8y3juX6hI1Jm7LCv2Ynib9VbkCnIsM/B8rf6lh
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hQU2IsLD284Ijpb8H3NrMtY=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.4814812552065222`, 1.4807410169976263`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"-", "10"}], " ", 
         RowBox[{"Hn1", "(", "t", ")"}]}], 
       RowBox[{
         RowBox[{"0.01`", "\[VeryThinSpace]"}], "-", 
         RowBox[{"Hn2", "(", "t", ")"}]}], 
       RowBox[{
         RowBox[{"10", " ", 
           RowBox[{"Hn1", "(", "t", ")"}]}], "+", 
         RowBox[{"0.01`", " ", 
           RowBox[{"Hn2", "(", "t", ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.683939786388772*^9, 3.683939818490177*^9, 3.683939991861505*^9, 
   3.683940042215361*^9, {3.6839944344753237`*^9, 3.683994484223173*^9}, 
   3.683994574783599*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"H1", "[", "t", "]"}], "+", 
      RowBox[{"2", 
       RowBox[{"H2", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"H1", "[", "t", "]"}], "+", 
      RowBox[{"2", 
       RowBox[{"H2", "[", "t", "]"}]}], "-", 
      RowBox[{"10", 
       RowBox[{"Hn1", "[", "t", "]"}]}], "+", 
      RowBox[{"0.01", 
       RowBox[{"Hn2", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6839399412249603`*^9, 3.683939978490617*^9}, {
  3.683940021360117*^9, 3.6839400474617443`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4pxhhqEwwfx/4X/PNVih
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.26084533840604474`, 1.999999999999999}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"H1", "(", "t", ")"}], "+", 
         RowBox[{"2", " ", 
           RowBox[{"H2", "(", "t", ")"}]}]}], 
       RowBox[{
         RowBox[{"H1", "(", "t", ")"}], "+", 
         RowBox[{"2", " ", 
           RowBox[{"H2", "(", "t", ")"}]}], "-", 
         RowBox[{"10", " ", 
           RowBox[{"Hn1", "(", "t", ")"}]}], "+", 
         RowBox[{"0.01`", " ", 
           RowBox[{"Hn2", "(", "t", ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6839399610602837`*^9, 3.683939980683041*^9}, {
  3.6839400242197447`*^9, 3.683940048637253*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using the cubic Hermite polynomials for interpolation on the interval [x1, x2]

We \[OpenCurlyDoubleQuote]translate\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]scale\[CloseCurlyDoubleQuote] H1, H2, Hn1, Hn2: x = \
x1+t (x2-x1)=> t=(x-x1)/(x2-x1)
The percentage of (x-x1) in the interval [x2-x1]\
\>", "Subsubsection",
 CellChangeTimes->{{3.683978526429428*^9, 3.6839786376017857`*^9}, {
  3.6839786921647367`*^9, 3.683978775167948*^9}},
 FormatType->"TextForm"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x1", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"x2", "=", "7"}], "\[IndentingNewLine]", 
 RowBox[{"h1", "=", 
  RowBox[{"x2", "-", "x1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "x1"}], ")"}], "/", "h1"}]}]}], "Input",
 CellChangeTimes->{{3.683978645408722*^9, 3.683978688429942*^9}, {
  3.683978796588225*^9, 3.683978849204877*^9}, {3.683995106508638*^9, 
  3.683995110739359*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.683978850007555*^9, 3.683994957363874*^9, 
  3.68399511591798*^9}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.683978850007555*^9, 3.683994957363874*^9, 
  3.683995115926957*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.683978850007555*^9, 3.683994957363874*^9, 
  3.68399511593369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y1", "=", "8"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"y2", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"-", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"p2", " ", "=", " ", "10"}]}], "Input",
 CellChangeTimes->{{3.6839951239511223`*^9, 3.683995142862927*^9}, {
  3.683995218271819*^9, 3.683995230805457*^9}, {3.683995281633564*^9, 
  3.6839953068888597`*^9}, {3.683995383083613*^9, 3.6839953921930656`*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.683995145246518*^9, 3.683995310162993*^9, {3.683995384651986*^9, 
   3.683995392937332*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.683995145246518*^9, 3.683995310162993*^9, {3.683995384651986*^9, 
   3.683995392946121*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.683995145246518*^9, 3.683995310162993*^9, {3.683995384651986*^9, 
   3.683995392952797*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.683995145246518*^9, 3.683995310162993*^9, {3.683995384651986*^9, 
   3.6839953929592037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y1", " ", 
     RowBox[{"H1", "[", 
      RowBox[{"T", "[", "x", "]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"y2", " ", 
     RowBox[{"H2", "[", 
      RowBox[{"T", "[", "x", "]"}], "]"}]}], "+", 
    RowBox[{"p1", " ", "*", "h1", " ", 
     RowBox[{"Hn1", "[", 
      RowBox[{"T", "[", "x", "]"}], "]"}]}], "+", " ", 
    RowBox[{"p2", "*", "h1", "  ", 
     RowBox[{"Hn2", "[", 
      RowBox[{"T", "[", "x", "]"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6839788569668827`*^9, 3.683978869275704*^9}, {
  3.683978906670878*^9, 3.683978915366852*^9}, {3.6839951719215183`*^9, 
  3.68399519797331*^9}, {3.683995315184951*^9, 3.6839953277686157`*^9}, {
  3.683995360347245*^9, 3.683995378065968*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2, 7}, {-2.8010507750740032`, 7.999999897959163}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683978870260067*^9, 3.683978897207067*^9}, 
   3.683994958788724*^9, 3.683995201023492*^9, 3.683995333864966*^9, {
   3.6839953701642103`*^9, 3.683995394983708*^9}}]
}, Open  ]],

Cell["More systematically : ", "Text",
 CellChangeTimes->{{3.683979132379891*^9, 3.68397914121941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"x_", ",", " ", "x1_", ",", " ", "x2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "x1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"x2", "-", "x1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.683979016449486*^9, 3.683979038128401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"H1", "[", 
    RowBox[{"T", "[", 
     RowBox[{"x", ",", " ", "9.55", ",", " ", "100"}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "9.55", ",", " ", "100"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.6839790429092216`*^9, 3.683979091115719*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
O6b+/OGb/3Qa/B/pCo+Y
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{9.55, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{9.55, 100}, {0., 0.9999999999999988}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6839790693538446`*^9, 3.6839790919861517`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 693},
WindowMargins->{{0, Automatic}, {Automatic, 23}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 260, 6, 57, "Input"],
Cell[821, 28, 988, 29, 117, "Input"],
Cell[CellGroupData[{
Cell[1834, 61, 539, 14, 32, "Input"],
Cell[2376, 77, 42097, 779, 235, "Output"]
}, Open  ]],
Cell[44488, 859, 210, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[44723, 866, 697, 18, 32, "Input"],
Cell[45423, 886, 29128, 551, 273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74588, 1442, 326, 9, 32, "Input"],
Cell[74917, 1453, 138, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75092, 1461, 171, 5, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[75288, 1470, 922, 23, 54, "Input"],
Cell[76213, 1495, 36730, 678, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112980, 2178, 756, 22, 54, "Input"],
Cell[113739, 2202, 23731, 450, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137519, 2658, 480, 10, 107, "Subsubsection"],
Cell[CellGroupData[{
Cell[138024, 2672, 497, 12, 96, "Input"],
Cell[138524, 2686, 116, 2, 32, "Output"],
Cell[138643, 2690, 117, 2, 32, "Output"],
Cell[138763, 2694, 116, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138916, 2701, 478, 9, 96, "Input"],
Cell[139397, 2712, 145, 3, 32, "Output"],
Cell[139545, 2717, 145, 3, 32, "Output"],
Cell[139693, 2722, 162, 4, 32, "Output"],
Cell[139858, 2728, 148, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140043, 2736, 859, 21, 32, "Input"],
Cell[140905, 2759, 7608, 138, 268, "Output"]
}, Open  ]],
Cell[148528, 2900, 103, 1, 30, "Text"],
Cell[148634, 2903, 317, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[148976, 2916, 345, 9, 32, "Input"],
Cell[149324, 2927, 6036, 112, 236, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

